---

name: CI (integration)

on:
  pull_request:

# Cancel any in-progress job or run
concurrency:
  group: 'ci-${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true

defaults:
  run:
    shell: sh -ex {0}

jobs:
  package-builds:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        release: ['xenial', 'bionic', 'focal', 'jammy']
    steps:
      - name: Prepare build tools
        env:
          DEBFULLNAME: GitHub CI Auto Builder
          DEBEMAIL: nobody@nowhere.invalid
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get -qy update
          sudo DEBIAN_FRONTEND=noninteractive apt-get -qy install --no-install-recommends sbuild schroot ubuntu-dev-tools debootstrap git-buildpackage
          sudo sbuild-adduser $USER
          cp /usr/share/doc/sbuild/examples/example.sbuildrc /home/$USER/.sbuildrc
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Build package
        run: |
          echo 'mr: ${{ matrix.release }}'
          gbp dch --ignore-branch --snapshot --distribution=${{ matrix.release }}
          dch --local=~${{ matrix.release }} ""
          sg sbuild -c "mk-sbuild ${{ matrix.release }}"
          sg sbuild -c "sbuild --dist='${{ matrix.release }}' --resolve-alternatives --no-clean-source --nolog --verbose --no-run-lintian --build-dir='${{ runner.temp }}'"
          mv ../*.deb '${{ runner.temp }}'  # Workaround for Debbug: #990734, drop in Jammy
      - name: Archive debs as artifacts
        uses: actions/upload-artifact@v3
        with:
          name: 'ci-debs-${{ matrix.release }}'
          path: '${{ runner.temp }}/*.deb'
          retention-days: 3
  integration-tests:
    if: ${{ github.repository == 'canonical/ubuntu-advantage-client' }}
    needs: package-builds
    runs-on: ubuntu-20.04
    strategy:
      # Disable fail-fast as these jobs are slow, so we want to extract
      # as much information as possible from them.
      fail-fast: false
      matrix:
        release: ['xenial', 'bionic', 'focal', 'jammy']
        platform: ['lxd']
        include:
          - release: bionic
            platform: awspro
    steps:
      - name: Prepare test tools
        run: |
          sudo DEBIAN_FRONTEND=noninteractive apt-get -qy update
          sudo DEBIAN_FRONTEND=noninteractive apt-get -qy install tox distro-info
          sudo adduser $USER lxd
      - name: Initialize LXD
        if: matrix.platform == 'lxd' || matrix.platform == 'vm'
        run: sudo lxd init --auto
      - name: Git checkout
        uses: actions/checkout@v2
      - name: Retieve debs
        uses: actions/download-artifact@v3
        with:
          name: 'ci-debs-${{ matrix.release }}'
          path: '${{ runner.temp }}'
      - name: Canonicalize deb filenames
        working-directory: '${{ runner.temp }}'
        run: |
          ln -s ubuntu-advantage-tools*.deb ubuntu-advantage-tools-${{ matrix.release }}.deb
          ln -s ubuntu-advantage-pro*.deb ubuntu-advantage-pro-${{ matrix.release }}.deb
      - name: Behave
        env:
          PYCLOUDLIB_CONFIG_CONTENTS: '${{ secrets.PYCLOUDLIB_CONFIG_CONTENTS }}'
          SSH_PRIVATE_KEY: '${{ secrets.SSH_PRIVATE_KEY }}'
          SSH_PUBLIC_KEY: '${{ secrets.SSH_PUBLIC_KEY }}'
          UACLIENT_BEHAVE_DEBS_PATH: '${{ runner.temp }}'
          UACLIENT_BEHAVE_ARTIFACT_DIR: '${{ runner.temp }}/artifacts/behave-${{ matrix.platform }}-${{ matrix.release }}'
          UACLIENT_BEHAVE_SNAPSHOT_STRATEGY: '1'
          UACLIENT_BEHAVE_BUILD_PR: '1'
          UACLIENT_BEHAVE_CONTRACT_TOKEN: '${{ secrets.UACLIENT_BEHAVE_CONTRACT_TOKEN }}'
          UACLIENT_BEHAVE_CONTRACT_TOKEN_STAGING: '${{ secrets.UACLIENT_BEHAVE_CONTRACT_TOKEN_STAGING }}'
          UACLIENT_BEHAVE_CONTRACT_TOKEN_STAGING_EXPIRED: '${{ secrets.UACLIENT_BEHAVE_CONTRACT_TOKEN_STAGING_EXPIRED }}'
        run: |
          PYCLOUDLIB_CONFIG="$(mktemp --tmpdir="${{ runner.temp }}" pycloudlib.toml.XXXXXXXXXX)"
          export PYCLOUDLIB_CONFIG

          # Dump secrets using a subshell to avoid leaks due to xtrace
          sh -c 'echo "$PYCLOUDLIB_CONFIG_CONTENTS" > "$PYCLOUDLIB_CONFIG"'

          # SSH keys (should match what specified in pycloudlib.toml)
          mkdir ~/.ssh
          touch ~/.ssh/cloudinit_id_rsa
          chmod 600 ~/.ssh/cloudinit_id_rsa
          sh -c 'echo "$SSH_PRIVATE_KEY" > ~/.ssh/cloudinit_id_rsa'
          sh -c 'echo "$SSH_PUBLIC_KEY" > ~/.ssh/cloudinit_id_rsa.pub'

          uversion=$(ubuntu-distro-info --series='${{ matrix.release }}' --release | cut -d' ' -f1)
          sg lxd -c "tox -e 'behave-${{ matrix.platform }}-$uversion' -- --tags=-slow"
      - name: Archive test artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: 'ci-behave-${{ matrix.release }}'
          path: '${{ runner.temp }}/artifacts/behave*'
          retention-days: 7
